{"version":3,"sources":["utils/colors.js","components/Profile/Profile.styles.jsx","components/Profile/Profile.jsx","components/Statistics/Statistics.style.jsx","components/Statistics/Statistics.jsx","components/Friends/FriendList.style.jsx","components/Friends/FriendList.jsx","components/TransactionHistory/TransactionHistory.style.jsx","components/TransactionHistory/TransactionHistory.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["colorsVars","Math","floor","random","toString","Container","styled","div","Description","Avatar","img","Name","p","Tag","Location","Stats","ul","StatsItem","li","Label","span","Quantity","Profile","user","src","avatar","alt","name","tag","location","stats","followers","views","StatisticsSection","section","TitleSection","h2","StatsList","StatsListItem","LabelSection","PercentageSection","Statistics","statisticData","title","map","element","label","percentage","id","FriendsSection","FriendsList","FriendsListItem","Status","props","isOnline","FriendList","friendList","friends","friendData","TransactionHistoryTable","table","TableHead","thead","TableRow","tr","TableTh","th","TableBody","tbody","TableTd","td","TransactionHistory","transactions","items","transactionRow","type","amount","currency","App","className","statisticalData","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.09aeec38.chunk.js","sourcesContent":["const randomizer = () => {\n  return `#${Math.floor(Math.random() * 16777215).toString(16)}`;\n};\n\nexport const colorsVars = {\n  sectionBackgroundColor: '#ffffff',\n  secondryBacgroundColor: '#ECF1F4',\n  mainTextColor: '#000000',\n  secondaryTextColor: '#929292',\n  borderColor: '#E9EDF2',\n  onLine: '#008000',\n  offLine: '#ff0000',\n  tableHead: '#00BCD5',\n  randomColor: randomizer,\n};\n","import styled from '@emotion/styled';\nimport { colorsVars } from '../../utils/colors';\n\nexport const Container = styled.div`\n  background-color: ${colorsVars.sectionBackgroundColor};\n  width: 250px;\n  margin-top: 30px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 35px;\n  border-radius: 5px;\n  overflow: hidden;\n  box-shadow: 0 0 5px rgba(0, 0, 0, 0.1);\n`;\n\nexport const Description = styled.div`\n  padding: 30px;\n`;\n\nexport const Avatar = styled.img`\n  border-radius: 50%;\n  width: 100px;\n  height: 100px;\n  margin-bottom: 30px;\n`;\n\nexport const Name = styled.p`\n  color: ${colorsVars.mainTextColor};\n  margin-top: 0;\n  margin-bottom: 15px;\n  font-size: 20px;\n  font-weight: 600;\n`;\n\nexport const Tag = styled.p`\n  color: ${colorsVars.secondaryTextColor};\n  margin-top: 0;\n  margin-bottom: 15px;\n`;\n\nexport const Location = styled.p`\n  margin: 0;\n  color: ${colorsVars.secondaryTextColor};\n`;\n\nexport const Stats = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  display: flex;\n  border-top: 1px solid ${colorsVars.borderColor};\n`;\n\nexport const StatsItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  height: 84px;\n  width: 84px;\n\n  align-items: center;\n  justify-content: center;\n  background-color: #f3f6f9;\n\n  :not(:last-child) {\n    border-right: 1px solid ${colorsVars.borderColor};\n  }\n`;\n\nexport const Label = styled.span`\n  color: ${colorsVars.secondaryTextColor};\n`;\n\nexport const Quantity = styled.span`\n  color: ${colorsVars.mainTextColor};\n  font-weight: 600;\n`;\n","import {\n  Container,\n  Description,\n  Avatar,\n  Name,\n  Tag,\n  Location,\n  Stats,\n  StatsItem,\n  Label,\n  Quantity,\n} from './Profile.styles';\n\nexport function Profile(user) {\n  return (\n    <Container>\n      <Description>\n        <Avatar src={user.avatar} alt={user.name} />\n        <Name>{user.name}</Name>\n        <Tag>@{user.tag}</Tag>\n        <Location>{user.location}</Location>\n      </Description>\n      <Stats>\n        <StatsItem>\n          <Label>Folowers</Label>\n          <Quantity>{user.stats.followers}</Quantity>\n        </StatsItem>\n        <StatsItem>\n          <Label>Views</Label>\n          <Quantity>{user.stats.views}</Quantity>\n        </StatsItem>\n        <StatsItem>\n          <Label>Likes</Label>\n          <Quantity>{user.stats.views}</Quantity>\n        </StatsItem>\n      </Stats>\n    </Container>\n  );\n}\n","import styled from '@emotion/styled';\nimport { colorsVars } from '../../utils/colors';\n\nexport const StatisticsSection = styled.section`\n  background-color: ${colorsVars.sectionBackgroundColor};\n  height: fit-content;\n  width: fit-content;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 35px;\n`;\n\nexport const TitleSection = styled.h2`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 70px;\n  margin: 0;\n\n  text-transform: uppercase;\n  font-weight: 600;\n  font-size: 18px;\n  color: ${colorsVars.secondaryTextColor};\n`;\n\nexport const StatsList = styled.ul`\n  list-style: none;\n  display: flex;\n  padding: 0;\n  margin: 0;\n`;\n\nexport const StatsListItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 70px;\n  height: 60px;\n\n  background-color: ${colorsVars.randomColor};\n`;\n\nexport const LabelSection = styled.span`\n  color: ${colorsVars.sectionBackgroundColor};\n`;\n\nexport const PercentageSection = styled.span`\n  color: ${colorsVars.sectionBackgroundColor};\n`;\n","import {\n  StatisticsSection,\n  TitleSection,\n  StatsList,\n  StatsListItem,\n  LabelSection,\n  PercentageSection,\n} from './Statistics.style';\n\nexport function Statistics(statisticData) {\n  return (\n    <StatisticsSection>\n      {statisticData.title ? (\n        <TitleSection>{statisticData.title}</TitleSection>\n      ) : (\n        ''\n      )}\n      <StatsList>\n        {statisticData.stats.map(element => (\n          <StatsListItem key={element.id}>\n            <LabelSection>{element.label}</LabelSection>\n            <PercentageSection>{element.percentage}</PercentageSection>\n          </StatsListItem>\n        ))}\n      </StatsList>\n    </StatisticsSection>\n  );\n}\n","import styled from '@emotion/styled';\nimport { colorsVars } from '../../utils/colors';\n\nexport const FriendsSection = styled.div``;\n\nexport const FriendsList = styled.ul`\n  list-style: none;\n  padding: 0;\n`;\n\nexport const FriendsListItem = styled.li`\n  margin-left: auto;\n  margin-right: auto;\n  display: flex;\n  align-items: center;\n  width: 400px;\n  height: 115px;\n  background-color: ${colorsVars.sectionBackgroundColor};\n\n  margin-bottom: 10px;\n\n  border-radius: 5px;\n  box-shadow: 0 0 5px rgba(0, 0, 0, 0.3);\n`;\n\nexport const Status = styled.span`\n  display: block;\n  width: 25px;\n  height: 25px;\n  border-radius: 50%;\n  margin-left: 15px;\n  background-color: ${props =>\n    props.isOnline ? colorsVars.onLine : colorsVars.offLine};\n`;\n\nexport const Avatar = styled.img`\n  width: 100px;\n  height: 100px;\n  border-radius: 5px;\n\n  margin-left: 15px;\n`;\n\nexport const Name = styled.p`\n  margin-left: 15px;\n  font-size: 28px;\n  font-weight: 600;\n`;\n","import {\n  FriendsSection,\n  FriendsList,\n  FriendsListItem,\n  Status,\n  Avatar,\n  Name,\n} from './FriendList.style';\n\nexport function FriendList(friendList) {\n  return (\n    <FriendsSection>\n      <FriendsList>\n        {friendList.friends.map(friendData => (\n          <FriendsListItem key={friendData.id}>\n            <Status isOnline={friendData.isOnline}></Status>\n            <Avatar src={friendData.avatar} alt={friendData.name} />\n            <Name>{friendData.name}</Name>\n          </FriendsListItem>\n        ))}\n      </FriendsList>\n    </FriendsSection>\n  );\n}\n","import styled from '@emotion/styled';\nimport { colorsVars } from '../../utils/colors';\n\nexport const TransactionHistoryTable = styled.table`\n  margin-left: auto;\n  margin-right: auto;\n  width: 875px;\n  border-radius: 5px;\n\n  background-color: ${colorsVars.sectionBackgroundColor};\n  box-shadow: 0 0 5px rgba(0, 0, 0, 0.1);\n`;\n\nexport const TableHead = styled.thead``;\n\nexport const TableRow = styled.tr`\n  :nth-child(even) {\n    background-color: ${colorsVars.secondryBacgroundColor};\n  }\n`;\n\nexport const TableTh = styled.th`\n  background-color: ${colorsVars.tableHead};\n  color: ${colorsVars.sectionBackgroundColor};\n  text-transform: uppercase;\n  width: 295px;\n  height: 50px;\n`;\n\nexport const TableBody = styled.tbody``;\n\nexport const TableTd = styled.td`\n  width: 295px;\n  height: 50px;\n  color: ${colorsVars.secondaryTextColor};\n\n  text-transform: capitalize;\n`;\n","import {\n  TransactionHistoryTable,\n  TableHead,\n  TableRow,\n  TableTh,\n  TableBody,\n  TableTd,\n} from '../TransactionHistory/TransactionHistory.style';\n\nexport function TransactionHistory(transactions) {\n  return (\n    <TransactionHistoryTable>\n      <TableHead>\n        <TableRow>\n          <TableTh>Type</TableTh>\n          <TableTh>Amount</TableTh>\n          <TableTh>Currency</TableTh>\n        </TableRow>\n      </TableHead>\n\n      <TableBody>\n        {transactions.items.map(transactionRow => (\n          <TableRow key={transactionRow.id}>\n            <TableTd>{transactionRow.type}</TableTd>\n            <TableTd>{transactionRow.amount}</TableTd>\n            <TableTd>{transactionRow.currency}</TableTd>\n          </TableRow>\n        ))}\n      </TableBody>\n    </TransactionHistoryTable>\n  );\n}\n","import './App.css';\nimport { Profile } from './components/Profile/Profile';\nimport { Statistics } from './components/Statistics/Statistics';\nimport { FriendList } from './components/Friends/FriendList';\nimport { TransactionHistory } from './components/TransactionHistory/TransactionHistory';\n\nimport user from './data/Profile/user.json';\nimport statisticalData from './data/Statistics/statistical-data.json';\nimport friends from './data/Friends/friends.json';\nimport transactions from './data/Transaction/transactions.json';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* task 1 */}\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      {/* task 2 */}\n      <Statistics stats={statisticalData} />\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n      {/* task 3 */}\n      <FriendList friends={friends} />\n      {/* task 4 */}\n      <TransactionHistory items={transactions} />;\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}